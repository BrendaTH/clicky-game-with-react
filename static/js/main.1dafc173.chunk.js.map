{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Jumbotron/index.js","components/Title/index.js","App.js","index.js"],"names":["FriendCard","props","className","onClick","incrementScore","id","alt","name","src","image","occupation","location","Wrapper","children","Jumbotron","style","height","clear","paddingTop","textAlign","background","Title","App","state","friends","score","topScore","friendsChosen","console","log","newChosenArray","map","friendId","indexOf","setState","push","this","newFriendsArray","friend","sort","Math","random","key","Component","ReactDOM","render","document","getElementById"],"mappings":"swFA0BeA,MAvBf,SAAoBC,GAClB,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,iBACb,yBAAKC,QAAS,kBAAMF,EAAMG,eAAeH,EAAMI,KAAKC,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,SAElF,yBAAKP,UAAU,WACb,4BACE,4BACE,yCADF,IAC0BD,EAAMM,MAEhC,4BACE,+CADF,IACgCN,EAAMS,YAEtC,4BACE,6CADF,IAC8BT,EAAMU,c,MCX/BC,MAJf,SAAiBX,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMY,WCS1BC,MAXf,YAAkC,IAAbD,EAAY,EAAZA,SACnB,OACE,yBACEE,MAAO,CAAEC,OAAQ,IAAKC,MAAO,OAAQC,WAAY,GAAIC,UAAW,SAAUC,WAAY,WACtFlB,UAAU,aAETW,I,MCCQQ,MANf,SAAepB,GACb,OACI,wBAAIC,UAAU,SAASD,EAAMY,W,OCoEpBS,E,2MA/DbC,MAAQ,CACNC,UACAC,MAAO,EACPC,SAAU,EACVC,cAAe,I,EAGjBvB,eAAiB,SAAAC,GAEfuB,QAAQC,IAAI,mCAAqC,EAAKN,MAAME,OAC5DG,QAAQC,IAAI,uCAAyC,EAAKN,MAAMI,eAGhE,IAAMG,EAAiB,EAAKP,MAAMI,cAAcI,IAAI,SAAAC,GAAc,OAAOA,IACxDF,EAAeG,QAAQ5B,IAGxB,GACd,EAAK6B,SAAS,CAAET,MAAO,IACvB,EAAKS,SAAS,CAAEP,cAAe,OAG/BG,EAAeK,KAAK9B,GACpB,EAAK6B,SAAS,CAAET,MAAO,EAAKF,MAAME,MAAQ,GAAK,WACzCW,KAAKb,MAAME,MAAQW,KAAKb,MAAMG,WAChCU,KAAKF,SAAS,CAAER,SAAUU,KAAKb,MAAME,QACrCG,QAAQC,IAAI,iCAGhB,EAAKK,SAAS,CAAEP,cAAeG,KAGjC,IAAMO,EAAkB,EAAKd,MAAMC,QAAQO,IAAI,SAAAO,GAAY,OAAOA,IAClED,EAAgBE,KAAK,kBAAMC,KAAKC,SAAW,KAC3C,EAAKP,SAAS,CAAEV,QAASa,K,wEAIjB,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,0DACA,sCAAYD,KAAKb,MAAME,OACvB,0CAAgBW,KAAKb,MAAMG,WAE7B,kBAAC,EAAD,sHACCU,KAAKb,MAAMC,QAAQO,IAAI,SAAAO,GAAM,OAC5B,kBAAC,EAAD,CACElC,eAAgB,EAAKA,eACrBC,GAAIiC,EAAOjC,GACXqC,IAAKJ,EAAOjC,GACZE,KAAM+B,EAAO/B,KACbE,MAAO6B,EAAO7B,MACdC,WAAY4B,EAAO5B,WACnBC,SAAU2B,EAAO3B,kB,GAzDXgC,a,MCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.1dafc173.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img onClick={() => props.incrementScore(props.id)} alt={props.name} src={props.image} />\n      </div>\n      <div className=\"content\">\n        <ul>\n          <li>\n            <strong>Name:</strong> {props.name}\n          </li>\n          <li>\n            <strong>Occupation:</strong> {props.occupation}\n          </li>\n          <li>\n            <strong>Location:</strong> {props.location}\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\n// color: #2A77AE;\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 200, clear: \"both\", paddingTop: 25, textAlign: \"center\", background: \"#2A77AE\" }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return (\n      <h1 className=\"title\">{props.children}</h1>\n  );\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Jumbotron from \"./components/Jumbotron\";\n\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    score: 0,\n    topScore: 0,\n    friendsChosen: []\n  };\n\n  incrementScore = id => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    console.log(\"score on entry to increment is: \" + this.state.score);\n    console.log(\"new array on entry to increment is: \" + this.state.friendsChosen);\n\n    // first get the already chosen friends, then check to see if this is a repeat friend.\n    const newChosenArray = this.state.friendsChosen.map(friendId => { return friendId });\n    const isRepeat = newChosenArray.indexOf(id);\n\n    // if repeat set the score to 0 and clear the chosen friends array\n    if (isRepeat >= 0) {\n      this.setState({ score: 0 });\n      this.setState({ friendsChosen: [] });\n    } else {\n      // not a repeat. save new friend to chosen, increment the score, and test for top score\n      newChosenArray.push(id);\n      this.setState({ score: this.state.score + 1 }, function () {\n        if (this.state.score > this.state.topScore) {\n          this.setState({ topScore: this.state.score });\n          console.log(\"setting top score to score\");\n        }\n      });\n      this.setState({ friendsChosen: newChosenArray });\n    }\n    // need to shuffle the friend pics\n    const newFriendsArray = this.state.friends.map(friend => { return friend });\n    newFriendsArray.sort(() => Math.random() - 0.5);\n    this.setState({ friends: newFriendsArray });\n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Jumbotron>\n          <h1>Welcome to the Memory Game</h1>\n          <h1>Score: {this.state.score}</h1>\n          <h1>Top Score: {this.state.topScore}</h1>\n        </Jumbotron>\n        <Title>Click on an image to increase your score. Try not to click on any image twice or your score will return to 0.</Title>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            incrementScore={this.incrementScore}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}