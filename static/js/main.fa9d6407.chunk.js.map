{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["FriendCard","props","className","alt","name","src","image","occupation","location","onClick","incrementScore","id","Wrapper","children","Title","score","topScore","App","state","friends","friendsChosen","console","log","newChosenArray","map","friendId","indexOf","setState","push","this","newFriendsArray","friend","sort","Math","random","key","Component","ReactDOM","render","document","getElementById"],"mappings":"swFAgCeA,MA7Bf,SAAoBC,GAClB,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,iBAEb,yBAAKC,IAAKF,EAAMG,KAAMC,IAAKJ,EAAMK,SAInC,yBAAKJ,UAAU,WACb,4BACE,4BACE,yCADF,IAC0BD,EAAMG,MAEhC,4BACE,+CADF,IACgCH,EAAMM,YAEtC,4BACE,6CADF,IAC8BN,EAAMO,YAIxC,0BAAMC,QAAS,kBAAMR,EAAMS,eAAeT,EAAMU,KAAKT,UAAU,UAA/D,sC,MClBSU,MAJf,SAAiBX,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMY,W,MCS1BC,MAVf,SAAeb,GACb,OACE,6BACE,wBAAIC,UAAU,SAASD,EAAMY,UAC7B,uBAAGX,UAAU,SAAb,UAA6BD,EAAMc,OACnC,uBAAGb,UAAU,SAAb,cAAiCD,EAAMe,Y,OC0D9BC,E,2MA1DbC,MAAQ,CACNC,UACAJ,MAAO,EACPC,SAAU,EACVI,cAAe,I,EAGjBV,eAAiB,SAAAC,GAEfU,QAAQC,IAAI,mCAAqC,EAAKJ,MAAMH,OAC5DM,QAAQC,IAAI,uCAAyC,EAAKJ,MAAME,eAGhE,IAAMG,EAAiB,EAAKL,MAAME,cAAcI,IAAI,SAAAC,GAAc,OAAOA,IACxDF,EAAeG,QAAQf,IAGxB,GACd,EAAKgB,SAAS,CAAEZ,MAAO,IACvB,EAAKY,SAAS,CAAEP,cAAe,OAG/BG,EAAeK,KAAKjB,GACpB,EAAKgB,SAAS,CAAEZ,MAAO,EAAKG,MAAMH,MAAQ,GAAK,WACzCc,KAAKX,MAAMH,MAAQc,KAAKX,MAAMF,WAChCa,KAAKF,SAAS,CAAEX,SAAUa,KAAKX,MAAMH,QACrCM,QAAQC,IAAI,iCAGhB,EAAKK,SAAS,CAAEP,cAAeG,KAGjC,IAAMO,EAAkB,EAAKZ,MAAMC,QAAQK,IAAI,SAAAO,GAAY,OAAOA,IAClED,EAAgBE,KAAK,kBAAMC,KAAKC,SAAW,KAC3C,EAAKP,SAAS,CAAER,QAASW,K,wEAIjB,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAOf,MAAOc,KAAKX,MAAMH,MAAOC,SAAUa,KAAKX,MAAMF,UAArD,eACCa,KAAKX,MAAMC,QAAQK,IAAI,SAAAO,GAAM,OAC5B,kBAAC,EAAD,CACErB,eAAgB,EAAKA,eACrBC,GAAIoB,EAAOpB,GACXwB,IAAKJ,EAAOpB,GACZP,KAAM2B,EAAO3B,KACbE,MAAOyB,EAAOzB,MACdC,WAAYwB,EAAOxB,WACnBC,SAAUuB,EAAOvB,kB,GApDX4B,a,MCDlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.fa9d6407.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n\n        <img alt={props.name} src={props.image}/>\n\n\n      </div>\n      <div className=\"content\">\n        <ul>\n          <li>\n            <strong>Name:</strong> {props.name}\n          </li>\n          <li>\n            <strong>Occupation:</strong> {props.occupation}\n          </li>\n          <li>\n            <strong>Location:</strong> {props.location}\n          </li>\n        </ul>\n      </div>\n      <span onClick={() => props.incrementScore(props.id)} className=\"remove\">\n          Click Here to Choose This Friend\n      </span>\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return (\n    <div>\n      <h1 className=\"title\">{props.children}</h1>\n      <p className=\"title\">Score: {props.score}</p>\n      <p className=\"title\">Top Score: {props.topScore}</p>\n    </div>\n  );\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    score: 0,\n    topScore: 0,\n    friendsChosen: []\n  };\n\n  incrementScore = id => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    console.log(\"score on entry to increment is: \" + this.state.score);\n    console.log(\"new array on entry to increment is: \" + this.state.friendsChosen);\n\n    // first get the already chosen friends, then check to see if this is a repeat friend.\n    const newChosenArray = this.state.friendsChosen.map(friendId => { return friendId });\n    const isRepeat = newChosenArray.indexOf(id);\n\n    // if repeat set the score to 0 and clear the chosen friends array\n    if (isRepeat >= 0) {\n      this.setState({ score: 0 });\n      this.setState({ friendsChosen: [] });\n    } else {\n      // not a repeat. save new friend to chosen, increment the score, and test for top score\n      newChosenArray.push(id);\n      this.setState({ score: this.state.score + 1 }, function () {\n        if (this.state.score > this.state.topScore) {\n          this.setState({ topScore: this.state.score });\n          console.log(\"setting top score to score\");\n        }\n      });\n      this.setState({ friendsChosen: newChosenArray });\n    }\n    // need to shuffle the friend pics\n    const newFriendsArray = this.state.friends.map(friend => { return friend });\n    newFriendsArray.sort(() => Math.random() - 0.5);\n    this.setState({ friends: newFriendsArray });\n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title score={this.state.score} topScore={this.state.topScore}>Clicky Game</Title>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            incrementScore={this.incrementScore}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}